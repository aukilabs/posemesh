// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Msg {
    /// The request ID (only used for requests and their corresponding responses).
    #[prost(string, tag = "1")]
    pub req_id: ::prost::alloc::string::String,
    #[prost(
        oneof = "msg::Payload",
        tags = "200, 201, 202, 203, 204, 205, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 400, 401, 402, 403"
    )]
    pub payload: ::core::option::Option<msg::Payload>,
}
/// Nested message and enum types in `Msg`.
pub mod msg {
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Payload {
        #[prost(message, tag = "200")]
        RegisterNodeRequest(super::super::nodepb::RegisterNodeRequest),
        #[prost(message, tag = "201")]
        RegisterNodeResponse(super::super::nodepb::RegisterNodeResponse),
        #[prost(message, tag = "202")]
        ConnectivityCheckRequest(super::super::nodepb::ConnectivityCheckRequest),
        #[prost(message, tag = "203")]
        ConnectivityCheckResponse(super::super::nodepb::ConnectivityCheckResponse),
        #[prost(message, tag = "204")]
        NodeInDomainUpdateRequest(super::super::nodepb::NodeInDomainUpdateRequest),
        #[prost(message, tag = "205")]
        NodeInDomainUpdateResponse(super::super::nodepb::NodeInDomainUpdateResponse),
        #[prost(message, tag = "300")]
        CreateDomainRequest(super::super::domainpb::CreateDomainRequest),
        #[prost(message, tag = "301")]
        CreateDomainResponse(super::super::domainpb::CreateDomainResponse),
        #[prost(message, tag = "302")]
        DeleteDomainRequest(super::super::domainpb::DeleteDomainRequest),
        #[prost(message, tag = "303")]
        DeleteDomainResponse(super::super::domainpb::DeleteDomainResponse),
        #[prost(message, tag = "304")]
        ClearDomainPosesRequest(super::super::domainpb::ClearDomainPosesRequest),
        #[prost(message, tag = "305")]
        ClearDomainPosesResponse(super::super::domainpb::ClearDomainPosesResponse),
        #[prost(message, tag = "306")]
        RemovePortalsFromDomainRequest(
            super::super::domainpb::RemovePortalsFromDomainRequest,
        ),
        #[prost(message, tag = "307")]
        RemovePortalsFromDomainResponse(
            super::super::domainpb::RemovePortalsFromDomainResponse,
        ),
        #[prost(message, tag = "308")]
        UpdateDomainManagerRequest(super::super::domainpb::UpdateDomainManagerRequest),
        #[prost(message, tag = "309")]
        UpdateDomainManagerResponse(super::super::domainpb::UpdateDomainManagerResponse),
        #[prost(message, tag = "310")]
        CancelUpdateDomainManagerRequest(
            super::super::domainpb::CancelUpdateDomainManagerRequest,
        ),
        #[prost(message, tag = "311")]
        CancelUpdateDomainManagerResponse(
            super::super::domainpb::CancelUpdateDomainManagerResponse,
        ),
        #[prost(message, tag = "400")]
        DeletePortalRequest(super::super::portalpb::DeletePortalRequest),
        #[prost(message, tag = "401")]
        DeletePortalResponse(super::super::portalpb::DeletePortalResponse),
        #[prost(message, tag = "402")]
        UpdatePortalSizeRequest(super::super::portalpb::UpdatePortalSizeRequest),
        #[prost(message, tag = "403")]
        UpdatePortalSizeResponse(super::super::portalpb::UpdatePortalSizeResponse),
    }
}
